"""empty message

Revision ID: a7158e3597ef
Revises: 8e13948331e9
Create Date: 2018-06-21 17:11:43.402330

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a7158e3597ef'
down_revision = '8e13948331e9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('capacites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('capacite', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipement', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('missions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mission', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiltype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profiltype_name'), 'profiltype', ['name'], unique=True)
    op.create_table('tactics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tactique', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profils',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('value', sa.String(length=8), nullable=True),
    sa.Column('caract√©ristiques', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('faction_id', sa.Integer(), nullable=True),
    sa.Column('stigmate_id', sa.Integer(), nullable=True),
    sa.Column('profiltype_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faction_id'], ['factions.id'], ),
    sa.ForeignKeyConstraint(['profiltype_id'], ['profiltype.id'], ),
    sa.ForeignKeyConstraint(['stigmate_id'], ['stigmates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profils_name'), 'profils', ['name'], unique=True)
    op.create_index(op.f('ix_profils_value'), 'profils', ['value'], unique=True)
    op.create_table('profils_capacites',
    sa.Column('profils_id', sa.Integer(), nullable=True),
    sa.Column('capacites_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['capacites_id'], ['capacites.id'], ),
    sa.ForeignKeyConstraint(['profils_id'], ['profils.id'], )
    )
    op.create_table('profils_equipements',
    sa.Column('profils_id', sa.Integer(), nullable=True),
    sa.Column('equipements_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['equipements_id'], ['equipements.id'], ),
    sa.ForeignKeyConstraint(['profils_id'], ['profils.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profils_equipements')
    op.drop_table('profils_capacites')
    op.drop_index(op.f('ix_profils_value'), table_name='profils')
    op.drop_index(op.f('ix_profils_name'), table_name='profils')
    op.drop_table('profils')
    op.drop_table('tactics')
    op.drop_index(op.f('ix_profiltype_name'), table_name='profiltype')
    op.drop_table('profiltype')
    op.drop_table('missions')
    op.drop_table('equipements')
    op.drop_table('capacites')
    # ### end Alembic commands ###
